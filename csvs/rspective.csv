Name,Description,Source Link,portalSourceName
Multi-types unit discount,"We want to extend the ability to define unit type discounts. The customers see a need of having a list of unit types instead of one. Why? Because they foresee use cases in which coupons give basket many different item types.Assumptions:On UI  we enable an option to add many unit types - one row, one typeWhen we save unit types, and they are linked to products, we should save source_id in a data model (verify if product source_id is editable - shouldn't)Possible new model:{ ""type"": ""UNIT"", ""units"": [ { ""unit_off"": 1,""unit_type"": ""prod_09001fc6ad"", ""source_id"": ""1fc(ife exists)"", ""effect"": ""ADD_NEW_ITEMS""}, { ""unit_off"": 6,""unit_type"": ""prod_0a26dd"", ""source_id"": ""prod_0a26dd(ife exists)"" , ""effect"": ""ADD_NEW_ITEMS""} ]}
",https://portal.productboard.com/rspective/1-product-portal/c/83-multi-types-unit-discount,rspective
Do not recalculate tiers after tier qualification rules change,"Problem statement:Currently  the user can make tier structure changes at any time, and after each change, tiers are recalculated for all customers. This may cause issues as some customers may get worse tier propositions while they have been qualified with the old rules. Solution:Two settings can be changed:Qualification rules (e.g., points balance, points collected in a period, etc.)Tiers structure (e.g., adding new tier, deleting tier, changing points thresholds, etc.) For changing qualification rules, there will be added option to recalculate tiers according to the new rules. By default, tiers will not be recalculated, meaning customers will not be immediately affected after the campaign save. However, all new tiers will be calculated with the new rules. The user can also force tiers recalculation once qualification rules are changed upon saving the campaign. With this option, tiers will be recalculated with the following rules:Customers can be upgraded to a higher tier if they meet the tier condition (if the tier expiration date should be calculated, then it will be calculated from the current date),Customers with some tiers will not be downgraded to a lower tier if they have an expiration date. In this case, the tier expiration date can be extended or shortened according to the new rules (if the tier expiration date should be calculated, then it will be calculated from the current date). Changing tier structure will always trigger tiers recalculation to the new structure with the following rules:Adding a new tier or changing the points thresholds: Customers' tiers will be upgraded or downgraded but not downgraded if they already have a tier with an expiration dateDeleting a tier: All customers who have that tier will lose it
",https://portal.productboard.com/rspective/1-product-portal/c/136-do-not-recalculate-tiers-after-tier-qualification-rules-change,rspective
Save Arrays as Value Type for Metadata Attributes,"Problem StatementCurrently  users cannot save properties that contain arrays in our metadata dictionaries.  SolutionWe will propose an array type in the metadata schema builder. It could enable us to save arrays of a given property kind as value to the metadata field. Before launching the solution, we have to recognize potential use cases to understand better how to use this feature.
",https://portal.productboard.com/rspective/1-product-portal/c/29-save-arrays-as-value-type-for-metadata-attributes,rspective
Store information that redemption is rolled back,"Problem statementIt is hard for customers to verify straight from the redemptions list which one was rolled back.SolutionWe want to introduce additional attributes which specify if redemption was rolled back and a list of IDs of rolling back transactions.In the get redemption details and list redemptions API methods  we should display the following data:{... rolled_back: true, rollbacks: { ""object"": ""list"", ""data_ref"": ""data"", ""data"": [ {""id"": ""rr_idtest"", ""reason"": ""order refunded""} ], ""total"": 1 }}Acceptance Criteria:New fields should be returned to get redemption details and listing redemptions methodIt should be possible to filter out redemptions by parameter rolled_backIn the redemption details view in Dashboard, we should present directly information that the transaction was rolled back (maybe with a badge at the top panel next to the creation date)We should remove the list of old events from the Redemption details view
",https://portal.productboard.com/rspective/1-product-portal/c/142-store-information-that-redemption-is-rolled-back,rspective
Total discount cap per promotion,"We need the ability to set up campaigns that apply a percentage-based discount (e.g.  50%) to all selected product types (items) while also respecting a maximum discount limit at the order level (for instance, no more than €100 in total discounts).We're currently facing a problem when a customer selects multiple products from different categories (where each category represents an item) in a single order. In this scenario, the discount limit we set is being applied to each item separately, rather than the entire order. For example, if we have a 50% discount with a €50 limit and a customer chooses 10 t-shirts totaling €100 and 10 hoodies also totaling €100, the total discount will come out to €100. This is because the discount limit applies to each item (t-shirts and hoodies) separately, rather than the total order.
",https://portal.productboard.com/rspective/1-product-portal/c/152-total-discount-cap-per-promotion,rspective
Condition for date and date-time metadata fields comparing if values are between two given params,"We will extend the rules builder by the option to check if provided date/date-time metadata value is between given parameters. The option will be similar to the within-time-frame condition but doesn't have the option to set up intervals:Acceptance Criteria:The operator will be available only in the new Rules BuilderThe name of the new operator will be: ""is between""
",https://portal.productboard.com/rspective/1-product-portal/c/148-condition-for-date-and-date-time-metadata-fields-comparing-if-values-are-between-two-given-params,rspective
Advanced approval workflows,"Enhance the approval workflow by : - creating multi level approval workflow and the option to decide the number of approval levels to be defined in the workflow rule based on business conditions (e.g. if campaign budget >$20K need 2 level approvals before ""Publish"" of campaign) - the ability to use different workflows depending on campaign type  including auto approval if a campaign does not have any workflow linked - the option to save workflow rules as templates and reuse - the option to add custom checklist in the approval process - reporting: count of promotions which went through the approval workflow
",https://portal.productboard.com/rspective/1-product-portal/c/160-advanced-approval-workflows,rspective
Enable comparing the date and date-time values in the IF operator,"Possibility to use date/date-time metadata in the dynamic discount builder to build IF conditions based on date/date-time metadata (e.g.  IF(ORDER_METADATA(""departure_date"") < ""2022-12-01"";20;10)). Acceptance Criteria:We extend only IF operator to be possible to set up conditions based on both time types: date and date-timeAs a field to compare user can select either the metadata of the proper type or built-in fields (voucher expiration date)
",https://portal.productboard.com/rspective/1-product-portal/c/150-enable-comparing-the-date-and-date-time-values-in-the-if-operator,rspective
Additional data for points operations,"Problem statement:Currently  it is not possible to add any additional information for such operations on points as:Adding points, Removing points,Transferring points.Solution:Add additional fields for adding/removing points manually (via API and Dashboard) and points transfers (via API):reason - allow adding a comment with a reason why such an operation was performed (String, Optional),source_id - allow adding a reference id (String, Optional). Additionally, add validation on the source_id field and reject the operation if there is already an action with a given source_id,Return stored 'reason' and 'source_id' within the 'balance' object in the list-customer-activities APIs + show 'reason' ('source_id' as a Nice-To-Have) on the customer activity list in the Dashboard application.The same control of credits will be possible for Gift Cards.
",https://portal.productboard.com/rspective/1-product-portal/c/114-additional-data-for-points-operations,rspective
Multi-tiered discount values for coupons,"Problem statement:Clients request advanced discounts where one discount code (one-off  personalized or public, fixed codes (e.g., SAVEMORE), allows customers to get multiple deal values depending on discount criteria. Voucherify already supports multi-level discounts in cart-level promotion campaigns. Solution:We want to extend multi-level discounts with an option to define combined deals available for code owners. This feature will offer:1| Level deals – Customers with distinct behaviors or characteristics will get different discount values with one code. For example:*a* If customers pay in USD, they will get a 20% discount, and if customers pay in CAD, they will get a 30$ off.*b* Order value break tiers: 100.00 or more – 10% off,250.00 or more – 15% off, 500.00 or more – 20% off, 1000.00 or more – 25% off.*c* Quantity break tiers:Buy 5 or more products X, get 10% off. Buy 10 or more products X, get 15% off. Buy 20 or more of products X, get 20% off.*d* Product base tiers – 5% discount on Hoodies products, 10% discount on products in Accessories categories. *e* And more.2| Multiple discounts – Several discounts can be applied to one cart, e.g., 15% for books, 10$ for the first purchase, free sample, and free shipping.3| Mixed deals – Customers with distinct behaviors or characteristics will get several discounts.For example: Buy 5 or more products X, get 10% off. Buy 10 or more products X, get 15% off.Buy 15 or more products X, get 20% off.Buy 20 or more products X, get 25% off.Free shipping.Product Y free sample.Free shipping will be available for carts with a total order value greater than 200$, and free samples will be available for customers who are eligible for a 25% off deal.Voucherify will enable an option to create multi-level discounts attached to a single code by adding an option to cart-level discounts. Those codes will have the same capabilities as discount coupons. Therefore cart-level discounts will allow Voucherify clients to create:Automatically applied tiered discounts based on cart structure and customer attributes (without codes).Personalized discount codes for personal use or public vouchers with tiered discount values.The rules for evaluating the applicable discounts will be configurable in the Validation Rules Builder.We will leave the stacking capability as optional for tiered coupons, which can be useful for multiple discounts and mixed deals.
",https://portal.productboard.com/rspective/1-product-portal/c/33-multi-tiered-discount-values-for-coupons,rspective
Categories field for promotion tiers and stacks,"The following objects will be expanded by category property (with a weight if defined): Promotion  Stack.The category field will be returned in the following methods if an additional expand parameter is given by invoking an API call:List Promotion StacksList Promotion TiersValidate PromotionsStackable API
",https://portal.productboard.com/rspective/1-product-portal/c/117-categories-field-for-promotion-tiers-and-stacks,rspective
Rules verified based on orders history,"Problem StatementRight now  Voucherify stores order history; however, the collected information cannot be leveraged for building validation rules based on a customer's past activity. For example, a discount is available for customers who purchased product X twice in the last two months. SolutionWe will introduce a mechanism for searching customers’ order history, using the filtering tool and query language, for example, filtering query to fetch paid orders for product X. By comparing the query result to the expected state (e.g., rows quantity more than 2), we will enable the option to build more complex promotions conditions. We plan to check the returned results by the following criteria:Total count (more than, exactly, less than).The last occurrence date (after, before, more than X days ago, less than Y days ago).The filtering query will allow the search by:Products and SKUs.Order metadata.Creation dates.Status.Products and SKUs metadata.Customer's attributes.In the filtering query, the user needs to explicitly state that s/he wants to analyze the given customer’s (who redeems promotion) orders, a specific campaign, or generally search all orders in the project.With this option, our clients won’t be limited to basing the conditions on the context of specific customers linked to a transaction. Instead, they will create broader rules, such as stopping the campaign when orders with ABC products were discounted more than X times.
",https://portal.productboard.com/rspective/1-product-portal/c/45-rules-verified-based-on-orders-history,rspective
Finding Patterns in Frequent API Calls,"Problem StatementVoucherify doesn't offer a mechanism for identifying suspicious coupon validation calls. Abusive coupon usage might end up in the list of leaked coupons. Currently  we have a rate limiter that prevents running bulk query sequences. If our monitoring system notices incentive abuse, we automatically notify clients. SolutionWe will introduce analyses that verify unwanted patterns in the API calls against particular paths selected by the tenant in a manageable manner. Clients will have an option to choose pattern criteria and means of notifications if we catch a suspicious behavior (e.g., too many API calls to the same API method in a configurable time-window).Moreover, it would be useful to display a history of triggered alerts to our clients.
",https://portal.productboard.com/rspective/1-product-portal/c/31-finding-patterns-in-frequent-api-calls,rspective
Formulas: comparison of strings in IF expression,"In this task  we want to extend the capabilities of the formula builder:It should be possible to build conditions where we can compare string metadata with fixed text values (or another string metadata).Add option to pick up text metadata properties ^Add new formula function -> String:Enhance IF function to accept strings ^
",https://portal.productboard.com/rspective/1-product-portal/c/107-formulas-comparison-of-strings-in-if-expression,rspective
New Distribution Metrics to Show the Ratio of Coupons Distributed versus Redeemed,"Problem StatementCurrently  the detailed campaign view does not contain any analytics that shows distribution performance. We need to introduce campaign performance metrics split by distributions and then by channels. SolutionWe will add a new card to the detailed campaign view. In this card, we will show:List of distributions (data in the title: name, distribution state, number of distribution channels, redemption rate – the ratio of at least once redeemed codes).The number of issued (published) codes, messages delivered, codes redeemed.The option to show in detail all presented numbers split by channel.There will be two action buttons, the first to create a new distribution and the second to export it to a CSV file. This card will have two states:Before setting the distribution live.When at least one distribution is established.
",https://portal.productboard.com/rspective/1-product-portal/c/46-new-distribution-metrics-to-show-the-ratio-of-coupons-distributed-versus-redeemed,rspective
Forecast modelling,"Support of promotion versioning and the ability to restore a previous version. Add average time spent on a promotion by different users based on promotion type.
",https://portal.productboard.com/rspective/1-product-portal/c/161-forecast-modelling,rspective
Stacking Discounts from Multiple Tiers,"Problem StatementCurrently  our clients lack an option to define combined promotions. They usually want to define a hierarchy of how discounts should be applicable in a campaign. For example:Free shipping on all orders (the automatic application without the need for entering a code).Free sample with every order (the automatic application without the need for entering a code).15% off – 1-time use codes (single-use voucher codes need to entered).30% off – select items (the automatic application without the need for entering a code).Our clients want to apply such discounts based on rules that define possible combinations of stackable promotion tiers.SolutionWe will deliver the promotions creator, enabling users to build tiers combinations to give a stacked discount. Additionally, via the API, Voucherify will return the configuration. An integrator will have to interpret the response and apply calculation based on the stacks' definition.Sub-features:Combine discounts from multiple tiers defined in one cart-level campaign levels discounts.Enable the possibility to define the hierarchy of applying the combined discounts.UpdatesSneak peek - 13th May 2021
",https://portal.productboard.com/rspective/1-product-portal/c/23-stacking-discounts-from-multiple-tiers,rspective
Redemption per customer in a campaign per day,"Extend Budget constraints with an option for 'Redemption per customer in a campaign per day' to set a daily limit for redemption in a campaign.Sample use case:We have an in-cart promotion campaign with multiple tiers giving free products. Customers can get only one product for free from the list of available products. In other words  customers can use only one promotion tier from a given campaign once per day. 
",https://portal.productboard.com/rspective/1-product-portal/c/84-redemption-per-customer-in-a-campaign-per-day,rspective
Instant Winner Selection for Giveaways,"Problem StatementThe giveaway winner selection process is currently limited to a manual process where an administrator decides when lucky numbers are drawn. Our clients expect to offer a more engaging experience where notification about lucky registration is sent instantly after signing up.SolutionWe will extend the selection algorithm by an option to run the process automatically after end-user registration. An administrator will be able to select the limits and regulations of an automatic draw. Moreover  the landing pages' editor will be extended by an additional sub-page that depicts the information to lucky participants after successful registration and draws.
",https://portal.productboard.com/rspective/1-product-portal/c/36-instant-winner-selection-for-giveaways,rspective
List products from Collection,"As part of this requirement  we want to solve the problem of listing discounts specific to configurable products collections. Our goal is to implement an API method that will be listing all products from a collection which is defined as an ID given in the query parameter. The collections typically define discounted products, therefore, showing a list of products from collection can be used for building websites showing special offers.
",https://portal.productboard.com/rspective/1-product-portal/c/80-list-products-from-collection,rspective
Customization of Displaying Metadata Attributes in the Listing Views,"Problem StatementCurrently  clients lack the option to display custom attributes and standard fields (hidden by default) in the objects listings. Users need that functionality for faster tracking and data interpretation.SolutionWe will implement a UI configurator, enabling users to select fields to load and display on the lists (Vouchers, Campaigns, Redemptions, Orders, Products, Customers, Validation Rules, Landing Pages, Distributions, Rewards). The configuration will be manageable on a project level. Users will decide which fields should be shown or hidden on the lists.
",https://portal.productboard.com/rspective/1-product-portal/c/26-customization-of-displaying-metadata-attributes-in-the-listing-views,rspective
Segment based earning rules and distributions extension,"Problem statement:The distribution feature does not offer enough options for incentivization customers who are part of dynamic segments. Currently  we support distribution to customers who entered segments after campaign activation or distribution activation.There is an option to define distributions and loyalty program earning rules for customers entering the segment in the current implementation. However, there is no way to define them to apply to all customers already in a given segment.Solution:We will add an option to the distribution creator, the user will be able to set when distribution should start.In the case of segment-based distribution, users will get an option to schedule segment reload.Add an option to set which customers from the segment will get incentives.Custom dates can be set only in the future.Display info about settings in Distribution details
",https://portal.productboard.com/rspective/1-product-portal/c/70-segment-based-earning-rules-and-distributions-extension,rspective
Edit & clone validation rule in creation campaign wizard,"Problem statementActual interaction for editing validation rules in the creation wizard could be more user-friendly. Users can't copy the validation rule to reuse it in a new campaign or edit it in the same window  and they need to switch contexts to work on the resource.SolutionUsers can find by-name validation rules or choose recently used ones.Users can filter and find validation rules.Users can copy existing validation rules and edit their properties in a new pop-up.Users can edit validation rules in a new pop-up.While the user is editing, existing rule-related resources that will be affected are shown in the pop-up.Mockups
",https://portal.productboard.com/rspective/1-product-portal/c/155-edit-clone-validation-rule-in-creation-campaign-wizard,rspective
Landing Page for Signing up from a Referral Link or Sharing Referral Code,"Problem StatementIn some cases  clients who are building a referral program in Voucherify don't have an option to quickly release a landing page via which new referred customers will sign up and trigger rewards depending on the referral scheme. Currently, when clients want to release referral programs, they need to spend extra time on developing registration forms.SolutionWe will combine landing pages designer with API for posting custom events. In the landing pages designer, we will enable an option to select an event from the list of custom events triggered when a customer successfully goes through the registration form. In the custom event settings, we will add an option for defining fields mapping from a form into parameters in the request body. It is critical to add an option to map a custom field from the landing page to the request body’s referral code field. Moreover, we will attach any other custom field from the form to either customer's metadata or event metadata. The form’s standard fields will be mapped automatically to the customers’ field (name – name, email – email).If the URL to the landing page contains code as a query param, we want to pick up the value and store it to the metadata attribute mapped to the referral code.
",https://portal.productboard.com/rspective/1-product-portal/c/43-landing-page-for-signing-up-from-a-referral-link-or-sharing-referral-code,rspective
Custom event  as Distribution trigger,"Problem statementAs a part of Distribution functionality  we want to offer automation triggered by custom events tracked from the tenants' apps.This option should also allow users to configure trigger criteria based on customer's and event's metadata. We will reuse the Validation Rules Builder for building rules.As a base for this feature, we will deliver a feature that would allow filtering customers by metadata fields embedded in an event.SolutionA new distribution type will be added that will be triggered after receiving a custom event. To send a distribution, user will need to select a custom event from the list of available custom events. When there is no specific event on the list, adding a new custom event directly from the distribution creation page will also be possible.Additionally, it will also be possible to use validation rules to build additional conditions for the custom event distribution. A new context type will be added: ‘Distribution – Custom event’. That new validation rules context type will be available in both basic and advanced builders with the following options:Basic builder:Customer activityAdvanced builder:Audience:Customer segmentCustomer metadata satisfyAdvanced:Custom event metadata satisfyCustom event metadata conditions allow for building rules based on the satisfied metadata received in the custom event.Distribution based on the custom event allows users to send distributions via various channels for the following purposes (similarly, for example, to the ‘Customer entered segment’ distribution):Notify customers about promotion – share details of the particular in-cart promotion (promotion tier). Available channels:SMS, Email, Intercom, Send and publish unique codes from the campaign – each receiver gets a unique code from the chosen campaign assigned (published) automatically to their profile. Available channels:SMS,Email,ActiveCampaign,Braze,Webhook,Intercom,Mailchimp,Send plain messages to customers – a plain message with no promo codes included. Available channels:SMS,Email,Intercom.
",https://portal.productboard.com/rspective/1-product-portal/c/73-custom-event-as-distribution-trigger,rspective
OAuth 2.0 to access Voucherify APIs,"The goal of this task is to improve the authentication mechanism and introduce the OAuth 2.0 protocol.
",https://portal.productboard.com/rspective/1-product-portal/c/157-oauth-2-0-to-access-voucherify-apis,rspective
Configurable redemptions limit per customer,"Typically admins want to limit usage per code (campaign) to X max tries per given period:X redemptions per customer per code (campaign) per (day/week/month/quater/half-year/year)Optionally:X redemptions per customer per code (campaign) per X (days/weeks/months/quaters/years)
",https://portal.productboard.com/rspective/1-product-portal/c/111-configurable-redemptions-limit-per-customer,rspective
For every line item in cart  customer will get [number] points,"Problem Statement: The loyalty program builder does not offer enough options for the “Order paid” earning rule. Currently  we support:Fixed number of points for making an order.A proportional number of points to the total order amount.To extend this capability, we want to add an option to accrue points based on the items in the cart.Solution:The new rule will relate to a particular line item quantity or sub amount:For every [quantity] [line item] in the cart, the customer will get [number] points.For every [amount] spent on [line item], the customer will get [number] points.A single product or product collection can be used as a line item in these rules. A default collection ‘All Products‘ can be used to build a rule for every line item in the cart.For example:Case 1 (single product quantity):GIVEN: Earning rule: For every 2 Illy coffees in the cart, the customer will get 20 loyalty points.Case 1.1:WHEN: Customers have 4 Illy coffees in the cart.THEN: After checking out, they will get 40 points on a given loyalty card.Case 1.2: WHEN: Customers have 3 Illy coffees in the cart.THEN: After checking out, they will get 20 points on a given loyalty card.Case 2 (collection sub amount):GIVEN: Earning rule: For every $20 spent on Coffees in the cart, the customer will get 20 loyalty points.Case 2.1:WHEN: Customers spent $40 on Coffees.THEN: After checking out, they will get 40 points on a given loyalty card.Case 2.2: WHEN: Customers spent $30 on Coffees.THEN: After checking out, they will get 20 points on a given loyalty card.Acceptance criteria:A single earning rule contains one rule for earning points for one product or collection.A collection picker should be used to find a product or collection.Points are granted only for the quantity stated in the rule. If customers get 10 points for two products, then when the customers have three things, they will still get only 10 points (for two products).Points are granted only for the amount stated in the rule. If customers get 10 points for spending $20 on products, then when the customers spend $30, they will still get only 10 points (for $20 spend).
",https://portal.productboard.com/rspective/1-product-portal/c/63-for-every-line-item-in-cart-customer-will-get-number-points,rspective
Basic Mode for the Validation Rules Builder,"Problem StatementThe validation rule builder is a powerful but complex tool. Some of our clients want to use only primary conditions popular for e-commerce  such as:Custom events (e.g., sign up, review left, newsletter subscription, cart abandoned, check out).Order attributes – metadata (e.g., payment_mean).Product attributes – metadata (e.g., vendor, category).We need to introduce a sample event schema and metadata schema that tenants can use directly to learn how to use Voucherify in selected use cases. SolutionWe will introduce the basic view for the validation rules builder and sample values for:Custom events: sign_up, review_left, newsletter_subscribed, cart_abandoned, payment_placed.Order metadata: payment_mean, booking_start_date, booking_end_date, location_id.Product metadata: vendor, category.Redemption metadata: location_id.Customer metadata: customer_life_time_value, acquisition_channel.In the basic view, it will be possible to set conditions for five rules categories:Customer activity – where users can build complex segments (the vital part is using the mega menu instead of the dropdown to increase the visibility of options that Voucherify offers).Events occurred – with preset events and the possibility to edit them while building the rule.Attributes match – a shortcut for using metadata in validation rules, it is a simplified view only for adding primary conditions like [vendor is Nike] AND [category is shoes].Discounted products – group, extracted directly from the existing model.Budget – group extracted directly from the existing model.AND junction should be used as the default between these categories.  If users want to add more complex rules, they should navigate to the existing Validation Rules Builder.
",https://portal.productboard.com/rspective/1-product-portal/c/40-basic-mode-for-the-validation-rules-builder,rspective
Reporting campaign performance - Coupons  Gifts,"Problem to solveWe struggle with outdated mechanisms for reporting campaign results. For example  the budget widget and details view lack information on how a campaign performs over time. Moreover, in some places at UI system displays wrong information - e.g. amount to use from the gift cards campaign and the state of a campaign when vouchers are deleted.SolutionWe want to introduce a reporting mechanism based on new data sources. It will enable us to build reports showing the following:Count of active, expired, disabled, and redeemed vouchers in timeAmount of spending (and orders quantity) placed about a campaign presented in timeShow the correlation of the total amount of placed orders to discounted value daily in timeShow usage tries (validations) about final redemptions. Moreover, in the charts, we have to present the failure ratio.
",https://portal.productboard.com/rspective/1-product-portal/c/125-reporting-campaign-performance-coupons-gifts,rspective
Discount type – New Order Line Item,"Problem Statement Currently  it is impossible to define the effect of the unit discount based on the cart content.SolutionWe will introduce a new discount type for rewards, coupons, and cart-level discounts. It will be possible to add a configurable product to order (e.g., a free sample). If criteria for getting a discount are fulfilled, in response, Voucherify will return updated order and unit type discount as a specification of applied changes.
",https://portal.productboard.com/rspective/1-product-portal/c/35-discount-type-new-order-line-item,rspective
Loyalty tier expiration date,"Problem statementLoyalty tiers are based on the customer's points balance  and when a specific number of points are collected, the customer is qualified for the given tier. The tier is valid as long as the customer has the required number of points, i.e., when the customer redeems points, he/she can also lose a tier.SolutionTo allow setting the rules of tier expiration, e.g., once the required number of points are collected, the customer will remain in a tier for a specific time, no matter the points balance afterward (e.g., 1 month, 3 months, 1 year, etc.). The tier expiration date will prevent the customer from losing a tier for a defined time, but it won’t block the upgrade to the higher tier. When the customer collects enough points required for a higher tier, he/she will be upgraded immediately. On the tier expiration day, Voucherify will evaluate the customer’s points balance, and based on that customer will either keep the tier for the next period or lose it.
",https://portal.productboard.com/rspective/1-product-portal/c/91-loyalty-tier-expiration-date,rspective
[Date filters] Birthday more than X days ago (relative without year),"Case:Create a customer segment with customers who had their birthdays more than 45 days ago.Justification: The tenant is giving customers some discounts during customer’s birthdays  and they do not want to give them anything more for the duration of 45 days after that date.
",https://portal.productboard.com/rspective/1-product-portal/c/113-date-filters-birthday-more-than-x-days-ago-relative-without-year,rspective
Preventing consecutive changes in the tier structure,"Problem statement:The user can make tier structure changes at any time  and after the change, tiers can be recalculated for all customers immediately after saving the campaign. In addition, it is possible to make tier structure changes once the customer tiers recalculation process from the previous change is still in progress.Solution:A new mechanism will be added to block loyalty program campaign modification until the customer tiers recalculation process is done to prevent consecutive changes. When customers' tier recalculation is in progress, the loyalty program campaign modification will be blocked through all channels (UI and API).
",https://portal.productboard.com/rspective/1-product-portal/c/135-preventing-consecutive-changes-in-the-tier-structure,rspective
Expiration rules for points on the earning rule level,"Problem statement:Currently  it is possible to set points expiration rules on the loyalty program campaign that will apply to all points earned by the customers (e.g. 12 months from earning activity). However, there is a need to make it possible to override the loyalty program generic rules for a specific offer, e.g., give customers double points, but those points will get a shorter expiration date (e.g., 6 months instead 12 months, etc.), points earned on specific activities will get a longer expiration date (e.g., 18 months instead 12 months, etc.). Solution:Ability to override loyalty program rules on the earning rule level to make it possible to define different points expiration rules for specific actions, irrespective of the loyalty program generic rules.
",https://portal.productboard.com/rspective/1-product-portal/c/141-expiration-rules-for-points-on-the-earning-rule-level,rspective
Voucherify as Events Destination in Segment,"ProblemThe majority of Voucherify users stream data from multiple sources through Segment. Currently  Voucherify doesn’t offer native integration with Segment.  SolutionWe will build an official Destination extension to Segment. With this integration, our clients will be able to track events as Custom Events in Voucherify. Thanks to such a connection, our clients can always maintain end-customers profiles to date and deliver better personalization of promotions managed in Voucherify.
",https://portal.productboard.com/rspective/1-product-portal/c/21-voucherify-as-events-destination-in-segment,rspective
Build Criteria Using SKU Metadata,"Problem StatementCurrently  clients with complex product catalogs can’t build rules based on SKU metadata. For example, it is impossible to create a rule for discounting all variants of products from brand X. SolutionWe will introduce the same concept for building metadata-based rules as existing product metadata rules. The metadata model will be adjusted, and SKU will be interpreted as a product variant. If there is a rule controlled by the product metadata and if property stored on SKU level fulfills that criteria, then Voucherify will return a discount. SKU will work in the same way as a product in the validation process.
",https://portal.productboard.com/rspective/1-product-portal/c/44-build-criteria-using-sku-metadata,rspective
Redemptions limit per month,"Problem statementCurrently  it is possible to set daily limits for code redemption and redemptions in a campaign per customer. However, it is impossible to set a monthly redemption limit.SolutionWe will add new options to the Budget constraints in the Validation rules to set a monthly redemption limit:Per customer:Redemptions per customer per code per month (available for both bulk and standalone codes).Redemptions per customer in a campaign per month (available for bulk codes and in-cart promotions).Redemptions per customer per level per month (available for in-cart promotions only).The total number of redemptions per month (independent of customers):Redemptions per code per month (available for both bulk and standalone codes).Redemptions in a campaign per month (available for bulk codes and in-cart promotions).Redemptions per level per month (available for in-cart promotions only).
",https://portal.productboard.com/rspective/1-product-portal/c/93-redemptions-limit-per-month,rspective
Password Policies – Complexity Policy,"Problem StatementWe know that a strong password policy is the frontline of defense to protect information stored online. For end-users  using a strong password at work is as essential as it is at home. SolutionWe will offer a set of functionalities to help organizations alleviate the burden related to weak passwords. The password rules will be configurable by the Account Owner and will apply to all users. By enabling this policy, administrators will go beyond the basic password and account policies and ensure that every password is secured by following these configurable guidelines: Passwords can’t contain the user name or parts of the user’s full name, such as their first name.Passwords must use at least three of the four available character types: lowercase letters, uppercase letters, numbers, and symbols.Passwords must be at least X characters long. The standard policy that follows password best practices will be enabled by default. 
",https://portal.productboard.com/rspective/1-product-portal/c/38-password-policies-complexity-policy,rspective
Tier expiration notifications,"Problem statement:The loyalty program owner does not have an option to send notifications to customers before their loyalty tier expires. The assumption is that the customer would be incentivized to earn more points in order to keep a loyalty tier if they are notified prior to the tier expiration. Solution:A new distribution will be added to allow the sending of notifications about loyalty tier expirations. There should be an option that allows timeframe specification. . For example  should the notification be sent 3 months before the tier expiration, 14 days before the tier expiration, etc.Loyalty tier expiration notifications should contain the following information:The loyalty tier expiration date,The loyalty tier name.
",https://portal.productboard.com/rspective/1-product-portal/c/138-tier-expiration-notifications,rspective
Discount effect - set fixed order price or order line item price,"Problem statement:Clients request an extended discounts list that covers all possible deal cases. Those not covered by Voucherify are related to setting a new price for the whole cart  order line items, or groups of products. We will introduce new discount effects:Deal applied proportionally to the number of order items.Set a fixed price discount on the cart.Set a new price on products.Set a new price on bundled products.Solution:Voucherify offers several types of discounts. Those discount types combined with validations rules, allow our clients to cover almost all discount use cases. For example if an order contains:1 x product A = 1 x 12.00; 2 x product B = 2 x 13.00 = 26.00; 4 x product C = 4 x 5.00 = 20.00; Total order price is 58.00Discount Amount ->  Amount (Sum of all items in cart):For example: Welcome coupon 10.00 off for the whole cart:1 x 12.00 + 2 x 13.00 + 4 x 5.00 - 10.00 = 58.00 - 10.00 = 48.00Discount Amount -> Amount Item (Item price x quantity):For example: Get 10.00 off for products B:1 x 12.00 + (2 x 13.00)-10.00 + 4 x 5.00 – discount will be applied only if the cart contains product B.Discount Percent -> Amount (Sum of all items in the cart):For example: Welcome coupon 10% off for the whole cart:58.00 - 10% x 58.00 = 52.20Discount Percent -> Amount Item (Item price x quantity):For example: Get 10% off for products B:1 x 12.00 + (2 x 13.00)-10% x (2 x 13.00) + 4 x 5.00 = 55.40Discount Unit -> Add missing – In our case customer has four matching items in the cart:For example: Buy 3 products C, then get one for free:1 x 12.00 + 2 x 13.00 + 4 x 5.00 - 5.00 = 53.00Discount Unit -> Add new – Add a free sampleFor example: Buy 4 products C, then get a free sample.Voucherify will introduce a new discount type for rewards, coupons, and cart-level discounts. You will be able to set a fixed price for the whole order or particular order items configurable by discount rules. New discount effects:1/ Deal applied proportionally to the number of order items:Discount Amount: Price ItemFor example: Give a 14.00 discount for products and split the deal proportionally if a customer has more than one item in the cart. In our case, customers with this discount use the coupon “Get 10% off for products B”.Step 1: 1 x (12.00 - 2.00) + 2 x (13.00 - 2.00) + 4 x (5.00 - 2.00) = 44.00Step 2:1 x (12.00 - 2.00) + 2 x (13.00 - 2.00) - 10%(2 x (13.00 - 2.00)) + 4 x (5.00 - 2.00) = 41.80With this mode, the second discount on the product can be smaller. Without split, the final price for the cart will be 41.402/ Set fixed price on a cart:Discount type: Fixed amountFor example: Pay 50.00 for your order if you ordered 7 items for more than 50.00 and less than 60.00**.**3/ Set a new price on products:Discount type: Fixed Item Price > Total Item Price For example: For all products from collection X, pay 4.00 (in our case, product C is in group X).1 x 12.00 + 2 x 13.00 + 4 x 4.00 = 54.004/ Set a new price on bundled products:Fixed Item Amount: Total Item AmountFor example: For 1 product A, 1 product B, and 1 product C, spend 24.99.24.99 + 1 x 13.00 + 3 x 5.00 = 52.99If the discount criteria are fulfilled, in response, Voucherify will return updated order and a new discount type as a specification of applied changes.🎨 mockups
",https://portal.productboard.com/rspective/1-product-portal/c/34-discount-effect-set-fixed-order-price-or-order-line-item-price,rspective
Rewards available only for specific loyalty tiers,"Problem statementCurrently  rewards mapping for tiers allows only to override reward prices in a certain loyalty tier. As a result, it is impossible to define rewards available only in specific tiers.SolutionTo extend rewards mapping for tiers with the option to mark rewards as unavailable in a specific tier.
",https://portal.productboard.com/rspective/1-product-portal/c/97-rewards-available-only-for-specific-loyalty-tiers,rspective
Block Suspicious Referees’ Email addresses,"Problem StatementCurrently  Voucherify doesn't offer a mechanism for identifying suspicious referred customers. Our clients need a fraud prevention tool against end-users who may abuse the program rules to receive multiple rewards. SolutionWe will offer a mechanism to verify collected data from referral and loyalty programs. Voucherify will identify suspicious activity (aliases, temporary domains) and alert administrators by searching patterns in stored customers’ profiles.
",https://portal.productboard.com/rspective/1-product-portal/c/25-block-suspicious-referees-email-addresses,rspective
Qualification API - return only coupons from Customer's wallet,"Problem/ObjectiveIn applications where Integrator creates wallet of coupons Voucherify doesn't offer API which hints which promos can be used in given sale context (customer profile  order, metadata). At the current stage, Voucherify qualification API returns matching discounts among all campaigns and standalone vouchers.Results:In promo qualification process evaluate just coupons and cards which are assigned to given Customer.If Customer doesn't exist, Voucherify returns an empty list of qualified promotions.If in qualification context defined as input payload we don't have customer definition (id or source_id), we should return an error.A qualified coupon is returned even in the case when it doesn't have a rule saying that is redeemable only by holder.
",https://portal.productboard.com/rspective/1-product-portal/c/102-qualification-api-return-only-coupons-from-customer-s-wallet,rspective
Rules for stacking discounts from multiple campaigns,"Problem StatementThe customers using Stackable API doesn't have control over the order of applying promos and excluding expensive campaigns from all regular ones. SolutionFor building a mechanism  we will use categories and priority weight, which is assigned to that value. Campaigns, promotion tiers, stacks (bundles of tiers), coupons, and gift cards will be collected under categories, and operators will get an option from Voucherify Dashboard to build a priorities structure which defines the following usage types:Exclusive - redeemables with rank (priority) from the range of that group will be applicable only separately. It won't be possible to connect this type with regular redeemables. If the exclusive incentive is in a stack (stackable validation, redemption API call), the system doesn't apply further cart discounts/coupons after this one. Optionally it will be possible to allow the application of all exclusive campaigns with the same rank (config in rules creator).Joint - this is the only group o redeemables which can be connected with exclusive records. Typically it will be a limited list of low-value discounts -e.g., free samples. Discounts are applicable in all cases - unless are too many of them.Open questions:We have to decide on a sorting rule for priorities (from 1 to the biggest, or another way around)If we apply only one exclusive promo and we try to use many with the same rank, we need to decide which is selected (based on the order form request body or creation date?). I guess in this iteration, we want to skip additional calculations which will pick up the highest or the lowest discount.Maybe instead of having one global limit of all records in stack call, we could have separate for exclusive, joint, and total?Acceptance Criteria:Groups will be configurable in simple UI where the user defines the range of priorities which qualifies for a specific configurationIf some redeemables are valid but will not be applied due to prioritising rules, we should return them in the validation API response under the new fieldThe validation API response contains on the list of applicable discount lists only those which are allowed and sorted by ordering rules (based on priority/rank)Promotion stacks (bundled discounts) are always applied together if defined on the list and selected according to priorities. The promo tiers in a bundled stack are sorted based on internal hierarchy value.We display priority value in a campaign/coupon/promo detail
",https://portal.productboard.com/rspective/1-product-portal/c/112-rules-for-stacking-discounts-from-multiple-campaigns,rspective
Redemptions limit per day,"Problem statementCurrently  it is possible to set daily limits for code redemption and redemptions in a campaign per customer. However, it is impossible to set a daily redemption limit (total number of redemptions per day) independent of customers.SolutionWe will add three new options to the Budget constraints in the Validation rules:Redemptions per code per day (available for both bulk and standalone codes)Redemptions in a campaign per day (available for bulk codes and in-cart promotions)Redemptions per level per day (available for in-cart promotions only)
",https://portal.productboard.com/rspective/1-product-portal/c/90-redemptions-limit-per-day,rspective
Formulas - utility date/date-time functions,"Enhance the list of functions by adding date and date-time utility functions to the library:TODAY() - returns the current time in date format: 2023-01-01NOW() - returns the current time in the date-time format: 2023-01-01T20:14:31Z
",https://portal.productboard.com/rspective/1-product-portal/c/124-formulas-utility-date-date-time-functions,rspective
Partial redemption for Stacking Discounts API,"ProblemWith the current API for applying stacked discounts  in case one of the redeemables among many is invalid, we are not getting in response the total deal value from only the valid coupons/promos.If we reorganize the validation method, the redemption endpoint could stay the same and be oriented on redeeming only valid discounts. Alternatively, we could extend the algorithm by adding an option to redeem only valid redeemables and skip those inapplicable ones.DetailsAs we allow rejecting some of the redeemables we should extend the max redeemables limit in a validation/redemption callWs should have a setting for max applied redeemables (this is already a part of Stacking Rules). Should be set to 5 (as it is right now) by defaultWe should return the list of accepted (as it is currently in redeemables property) and also rejected (as it is introduced already in stacking rules)This mode should adjust the Stacking Rules mechanism for exclusive and joint categories. We should always group redeemables by categories, but in case any of them is not valid we should take the next one. (e.g. If we sent 2 exclusives, and the first one is invalid, the second one must be applied - currently, this scenario is not possible).Add info about rejected redeemables to validations table
",https://portal.productboard.com/rspective/1-product-portal/c/122-partial-redemption-for-stacking-discounts-api,rspective
Logs view,"Problem Clients building comprehensive integrations feel lost because they lack a general view displaying the complete API logs overview. Sometimes they need to review all API calls from the given period. This process is tiresome given the current approach to logs display. Currently  logs are available, but they are linked to specific resources – e.g., coupons or campaigns. Therefore, if a user wants to see the list of all API calls from X to Y, no matter the resource type, it is impossible.Solution We will introduce a new view in View Dashboard, enabling filtering out and displaying logs related to API communication. By default, this listing view will show the records from the last hour.Acceptance criteria:It will be possible to filter logs by occurrence date. It will be configurable by a filter builder for defining an absolute time-window (from-to).After clicking log entry, Voucherify will show details related to that operation (request body, response, response status code, etc.).Users should get a fast option to recognize via which channel the API call was triggered.The log displayed in the list should point to API keys that authenticated the request.The information displayed in logs should be verified against permissions assigned to a logged user. Only admins can see the logs file.In the future, we might want to add more metadata fields for filtering logs – e.g., by API key, method, response status (success vs. failure).
",https://portal.productboard.com/rspective/1-product-portal/c/59-logs-view,rspective
